#!/bin/sh

winId=$(xdotool search --class mpv)
if [ -z "$winId" ]; then
  echo "mpv window not found"
  exit 1
fi

# vars
moveUp=0
moveDown=0

screenX=1920
screenY=1080
winW=426
winH=240
winWM=1280
winHM=720
panel=23
margin=5
borderSize=4 # tested in dual screen setup; window position corrected by size of border*2

let "posX = $screenX - $winW  - $margin - $borderSize"
let "posY1 = $panel + $margin + $borderSize / 2"
let "posY2 = $screenY - $winH - $margin - $borderSize"

let "posXM = $screenX / 2 - $winWM / 2"
let "posYM = $screenY / 2 - $winHM / 2"

# functions
helpFunction()
{
  echo ""
  echo "Usage: $0 --up/--down"
  echo -e "\t--up: move window to top right of the sreen"
  echo -e "\t--down: move window to bottom right of the sreen"
  echo -e "\t--center: move window to center of the screen"
  echo -e "\t--toggle: toggle between play and pause"
  echo -e "\t--close: close instance of mpv"
  exit 1
}

moveWin()
{
  xdotool windowsize $1 $4 $5
  xdotool windowmove $1 $2 $3
}

toggleMpv()
{
  xdotool key --clearmodifiers --window $1 "p"
}

closeMpv()
{
  xdotool key --clearmodifiers --window $1 "q"
}


for i in "$@"
do
    case $i in
        --up ) moveWin $winId $posX $posY1 $winW $winH ;;
        --down ) moveWin $winId $posX $posY2 $winW $winH ;;
        --center ) moveWin $winId $posXM $posYM $winWM $winHM ;;
        --toggle ) toggleMpv $winId ;;
        --close ) closeMpv $winId ;;
        * ) helpFunction ;;
    esac
done

